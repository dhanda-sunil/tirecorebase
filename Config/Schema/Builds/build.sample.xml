<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="/usr/share/php/data/phing/etc/phing-grammar.rng"
        type="application/xml"
        schematypens="http://relaxng.org/ns/structure/1.0" ?>

<project name="dbdeploy_treadtracks" default="default">

    <property name="db.driver" value="com.mysql.jdbc.Driver" />
    <property name="db.name" value="treadtracks" />
    <property name="db.url" value="jdbc:mysql://127.0.0.1:3306" />
    <property name="db.username" value="root" />
    <property name="db.password" value="root" />

    <tstamp/>

    <path id="mysql.classpath">
        <fileset dir="/usr/share/java/">
            <include name="mysql*.jar"/>
        </fileset>
    </path>

    <path id="dbdeploy.classpath">
        <!-- include the dbdeploy-ant jar -->
        <fileset dir="../../../dbdeploy">
            <include name="dbdeploy-ant-*.jar"/>
        </fileset>

        <!-- the dbdeploy task also needs the database driver jar on the classpath -->
        <path refid="mysql.classpath" />

    </path>

    <taskdef name="dbdeploy" classname="com.dbdeploy.AntTarget" classpathref="dbdeploy.classpath"/>

    <target name="default" depends="dump-database, clean, update-database"/>

    <target name="clean" depends="drop-and-create-database"/>

    <target name="dump-database">
        <exec executable="mysqldump" output="../Dumps/dump-${db.name}-${DSTAMP}-${TSTAMP}.sql">
            <arg value="--user=${db.username}" />
            <arg value="--password=${db.password}" />
            <arg value="--host=localhost" />
            <arg value="--port=3306" />
            <arg value="${db.name}" />
        </exec>
    </target>

    <target name="create-database">
        <sql driver="${db.driver}" url="${db.url}"
             userid="${db.username}" password="${db.password}" classpathref="mysql.classpath" >
            <fileset file="../base_schema.sql"/>
        </sql>
    </target>

    <target name="update-database" description="generate a sql upgrade script" depends="dump-database">

        <!-- if you don't specify an output file, dbdeploy will apply the changes for you

        you may need to specify delimiter and delimitertype for your scripts to be split properly - these
         work the same as in the ant sql task, see http://ant.apache.org/manual/CoreTasks/sql.html
        -->
        <dbdeploy driver="${db.driver}" url="${db.url}/${db.name}"
                  userid="${db.username}"
                  password="${db.password}"
                  dir="../Migrations"
                  dbms="mysql"
                />

    </target>

    <target name="update-database-and-apply-as-separate-step" description="generate a sql upgrade script">

        <!-- use dbdeploy to generate the change script -->
        <dbdeploy driver="${db.driver}" url="${db.url}"
                  userid="${db.username}"
                  password="${db.password}"
                  dir=""
                  outputfile="output.sql"
                  undoOutputfile="undo.sql"
                  dbms="mysql"
                />

        <!-- now apply the changescript to the database -->
        <sql driver="${db.driver}" url="${db.url}"
             userid="${db.username}" password="${db.password}" classpathref="mysql.classpath">
            <fileset file="output.sql"/>
        </sql>

    </target>

    <target name="drop-database">
        <sql driver="${db.driver}" url="${db.url}"
             userid="${db.username}" password="${db.password}" print="true" classpathref="mysql.classpath">
            DROP DATABASE IF EXISTS ${db.name};
        </sql>
    </target>

    <target name="drop-and-create-database" depends="drop-database, create-database">
    </target>

</project>
